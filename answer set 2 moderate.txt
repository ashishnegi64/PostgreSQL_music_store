/* 1. Write a query to return the email, first name, last name & genre of
all Rock Music listeners. Return your list ordered alphabetically by email
starting with A. */



select distinct email, first_name, last_name, genre.name

from customer

join invoice on customer.customer_id = invoice.customer_id

join invoice_line on invoice.invoice_id = invoice_line.invoice_id
join track on invoice_line.track_id = track.track_id

join genre on track.genre_id = genre.genre_id

where genre.name = 'Rock'

order by email;

or

select distinct email, first_name, last_name

from customer

join invoice on customer.customer_id = invoice.customer_id

join invoice_line on invoice.invoice_id = invoice_line.invoice_id
where track_id IN (
	
	select track_id 
	from track
	
	join genre on track.genre_id = genre.genre_id
	
	where genre.name like 'Rock'

)

order by email desc;


/* 2. Let's invite the artists who have written the most rock music in our dataset.
Write a query that returns the artist name and total track count of top 10 rock bands */



select artist.artist_id, artist.name, count(track.track_id) as total_track_count

from artist

join album on artist.artist_id = album.artist_id

join track on album.album_id = track.album_id

join genre on track.genre_id = genre.genre_id

where genre.name = 'Rock'

group by artist.artist_id

order by total_track_count desc

limit 10
;

or

select artist.artist_id, artist.name, count(artist.artist_id) as number_of_songs

from track

join album on album.album_id = track.album_id

join artist on artist.artist_id = album.artist_id

join genre on  genre.genre_id = track.genre_id

where genre.name like 'Rock'

group by artist.artist_id

order by number_of_songs desc

limit 10;


/* 3. Return all the track names that have a song length longer than the average
song length. Return the name and milliseconds for each track. Order by the song length
with the longest songs listed first. */



select name, milliseconds as song_length 

from track

where milliseconds > 
	(select avg(milliseconds) 
	 
	from track)

order by song_length desc;



or

select name, milliseconds

from track

where milliseconds > (
	
	select avg(milliseconds) as avg_track_lenth

	from track)

order by milliseconds desc;

